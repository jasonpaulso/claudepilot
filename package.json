{
  "name": "claude-pilot",
  "displayName": "Claude Pilot",
  "description": "Moveable Claude Code terminal view for VS Code - drag and drop between panels",
  "version": "0.2.1",
  "preview": true,
  "publisher": "twilightcoders",
  "icon": "media/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/twilightcoders/claude-pilot"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "claude",
    "ai",
    "terminal",
    "anthropic"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "claudePilotContainer",
          "title": "Claude Pilot",
          "icon": "$(robot)"
        }
      ]
    },
    "views": {
      "claudePilotContainer": [
        {
          "id": "claudePilotView",
          "name": "Claude Pilot",
          "type": "webview",
          "icon": "$(robot)"
        },
        {
          "id": "claudePilotTodos",
          "name": "Todos",
          "type": "tree",
          "icon": "$(checklist)",
          "visibility": "visible"
        }
      ]
    },
    "commands": [
      {
        "command": "claudePilot.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "claudePilot.reinitialize",
        "title": "Return to ClaudePilot Start Menu",
        "icon": "$(home)"
      },
      {
        "command": "claudePilot.openTerminal",
        "title": "Open Claude Pilot",
        "icon": "$(robot)"
      },
      {
        "command": "claudePilot.focus",
        "title": "Show Claude Pilot",
        "icon": "$(robot)"
      },
      {
        "command": "claudePilot.explainCode",
        "title": "Explain Code",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.fixCode",
        "title": "Fix Code",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.improveCode",
        "title": "Improve Code",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.addToContext",
        "title": "Add To Context",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.addFileToChat",
        "title": "Add File to Chat",
        "category": "Claude Pilot",
        "icon": "$(robot)"
      },
      {
        "command": "claudePilot.addTerminalToContext",
        "title": "Add to Claude Pilot Context",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.fixTerminalCommand",
        "title": "Ask Claude Pilot to fix This Command",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.explainTerminalCommand",
        "title": "Ask Claude Pilot to explain This Command",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.refreshTodos",
        "title": "Refresh Todos",
        "category": "Claude Pilot",
        "icon": "$(refresh)"
      },
      {
        "command": "claudePilot.copyTodoContent",
        "title": "Copy Todo Content",
        "category": "Claude Pilot",
        "icon": "$(copy)"
      },
      {
        "command": "claudePilot.insertTodoIntoEditor",
        "title": "Insert Todo into Editor",
        "category": "Claude Pilot",
        "icon": "$(insert)"
      },
      {
        "command": "claudePilot.markTodoComplete",
        "title": "Mark Todo Complete",
        "category": "Claude Pilot",
        "icon": "$(check)"
      },
      {
        "command": "claudePilot.changeTodoPriority",
        "title": "Change Todo Priority",
        "category": "Claude Pilot",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "claudePilot.clearCompletedTodos",
        "title": "Clear Completed Todos",
        "category": "Claude Pilot",
        "icon": "$(trash)"
      },
      {
        "command": "claudePilot.searchTodos",
        "title": "Search Todos",
        "category": "Claude Pilot",
        "icon": "$(search)"
      },
      {
        "command": "claudePilot.clearTodoFilter",
        "title": "Clear Todo Filter",
        "category": "Claude Pilot",
        "icon": "$(clear-all)"
      },
      {
        "command": "claudePilot.showSessionInfo",
        "title": "Show Session Info",
        "category": "Claude Pilot",
        "icon": "$(info)"
      },
      {
        "command": "claudePilot.exportTodos",
        "title": "Export Todos",
        "category": "Claude Pilot",
        "icon": "$(export)"
      },
      {
        "command": "claudePilotTodos.focus",
        "title": "Focus Todo View",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.switchTodoSession",
        "title": "Switch Todo Session",
        "category": "Claude Pilot",
        "icon": "$(history)"
      },
      {
        "command": "claudePilot.clearSessionHistory",
        "title": "Clear Session History",
        "category": "Claude Pilot",
        "icon": "$(clear-all)"
      },
      {
        "command": "claudePilot.openSettings",
        "title": "Open Settings",
        "category": "Claude Pilot",
        "icon": "$(settings-gear)"
      },
      {
        "command": "claudePilot.setTerminalFontSize",
        "title": "Set Terminal Font Size",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.setTerminalCursorStyle",
        "title": "Set Terminal Cursor Style",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.toggleWelcomeScreen",
        "title": "Toggle Welcome Screen",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.toggleTodoStatusBar",
        "title": "Toggle Todo Status Bar",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.setDefaultTodoFilter",
        "title": "Set Default Todo Filter",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.resetSettings",
        "title": "Reset Settings to Defaults",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.showSettingsSummary",
        "title": "Show Settings Summary",
        "category": "Claude Pilot"
      },
      {
        "command": "claudePilot.showOutputChannel",
        "title": "Show Output Channel",
        "category": "Claude Pilot",
        "icon": "$(output)"
      },
      {
        "command": "claudePilot.generateCommitMessage",
        "title": "Generate Commit Message with Claude",
        "category": "Claude Pilot",
        "icon": "$(robot)"
      },
      {
        "command": "claudepilot.showHookStatus",
        "title": "Show Hook Status",
        "category": "Claude Pilot",
        "icon": "$(info)"
      },
      {
        "command": "claudepilot.reinstallHooks",
        "title": "Reinstall Claude Hooks",
        "category": "Claude Pilot",
        "icon": "$(sync)"
      }
    ],
    "submenus": [
      {
        "id": "claudePilot.submenu",
        "label": "Claude Pilot"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "claudePilot.reinitialize",
          "when": "view == claudePilotView",
          "group": "navigation@1"
        },
        {
          "command": "claudePilot.openSettings",
          "when": "view == claudePilotView",
          "group": "navigation@2"
        },
        {
          "command": "claudePilot.showOutputChannel",
          "when": "view == claudePilotView",
          "group": "navigation@3"
        },
        {
          "command": "claudePilot.refresh",
          "when": "view == claudePilot",
          "group": "navigation@4"
        },
        {
          "command": "claudePilot.refreshTodos",
          "when": "view == claudePilotTodos",
          "group": "navigation@1"
        },
        {
          "command": "claudePilot.searchTodos",
          "when": "view == claudePilotTodos",
          "group": "navigation@2"
        },
        {
          "command": "claudePilot.clearCompletedTodos",
          "when": "view == claudePilotTodos",
          "group": "2_actions@1"
        },
        {
          "command": "claudePilot.exportTodos",
          "when": "view == claudePilotTodos",
          "group": "2_actions@2"
        },
        {
          "command": "claudePilot.showSessionInfo",
          "when": "view == claudePilotTodos",
          "group": "3_info@1"
        },
        {
          "command": "claudePilot.switchTodoSession",
          "when": "view == claudePilotTodos",
          "group": "3_info@2"
        }
      ],
      "view/item/context": [
        {
          "command": "claudePilot.copyTodoContent",
          "when": "view == claudePilotTodos && viewItem == todo-item",
          "group": "inline@1"
        },
        {
          "command": "claudePilot.insertTodoIntoEditor",
          "when": "view == claudePilotTodos && viewItem == todo-item",
          "group": "inline@2"
        },
        {
          "command": "claudePilot.markTodoComplete",
          "when": "view == claudePilotTodos && viewItem == todo-item",
          "group": "1_modify@1"
        },
        {
          "command": "claudePilot.changeTodoPriority",
          "when": "view == claudePilotTodos && viewItem == todo-item",
          "group": "1_modify@2"
        }
      ],
      "commandPalette": [
        {
          "command": "claudePilot.openTerminal",
          "when": "true"
        },
        {
          "command": "claudePilot.focus",
          "when": "true"
        }
      ],
      "explorer/context": [
        {
          "command": "claudePilot.openTerminal",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "claudePilot.openTerminal",
          "when": "true",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "claudePilot.addFileToChat",
          "group": "2_workspace@1"
        }
      ],
      "editor/context": [
        {
          "submenu": "claudePilot.submenu",
          "group": "1_modification",
          "when": "editorHasSelection || editorTextFocus"
        }
      ],
      "claudePilot.submenu": [
        {
          "command": "claudePilot.explainCode",
          "group": "1_claude@1"
        },
        {
          "command": "claudePilot.fixCode",
          "group": "1_claude@2"
        },
        {
          "command": "claudePilot.improveCode",
          "group": "1_claude@3"
        },
        {
          "command": "claudePilot.addToContext",
          "group": "1_claude@4"
        }
      ],
      "terminal/context": [
        {
          "command": "claudePilot.addTerminalToContext",
          "group": "1_modification"
        },
        {
          "command": "claudePilot.fixTerminalCommand",
          "group": "1_modification"
        },
        {
          "command": "claudePilot.explainTerminalCommand",
          "group": "1_modification"
        }
      ],
      "scm/title": [
        {
          "command": "claudePilot.generateCommitMessage",
          "when": "scmProvider == git",
          "group": "navigation"
        }
      ]
    },
    "keybindings": [
      {
        "command": "claudePilot.searchTodos",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t",
        "when": "focusedView == claudePilotTodos"
      },
      {
        "command": "claudePilot.refreshTodos",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "focusedView == claudePilotTodos"
      },
      {
        "command": "claudePilot.clearTodoFilter",
        "key": "escape",
        "when": "focusedView == claudePilotTodos"
      }
    ],
    "configuration": {
      "title": "Claude Pilot",
      "properties": {
        "claudePilot.startingCommand": {
          "type": "string",
          "enum": [
            "none",
            "claude",
            "claude --continue",
            "claude --resume"
          ],
          "default": "claude",
          "description": "Command to automatically execute when the terminal starts",
          "enumDescriptions": [
            "No command - just start the shell",
            "Start a fresh Claude Code interactive session",
            "Load the most recent conversation in the current directory",
            "Resume a specific session by ID (interactive selection)"
          ]
        },
        "claudePilot.terminal.fontSize": {
          "type": "number",
          "default": 14,
          "minimum": 8,
          "maximum": 32,
          "description": "Terminal font size in pixels"
        },
        "claudePilot.terminal.fontFamily": {
          "type": "string",
          "default": "",
          "description": "Terminal font family (empty to use VS Code terminal font)"
        },
        "claudePilot.terminal.cursorStyle": {
          "type": "string",
          "enum": [
            "block",
            "underline",
            "bar"
          ],
          "default": "block",
          "description": "Terminal cursor style"
        },
        "claudePilot.terminal.cursorBlink": {
          "type": "boolean",
          "default": true,
          "description": "Whether the terminal cursor should blink"
        },
        "claudePilot.terminal.scrollback": {
          "type": "number",
          "default": 1000,
          "minimum": 100,
          "maximum": 50000,
          "description": "Maximum number of lines to keep in terminal scrollback"
        },
        "claudePilot.ui.showWelcomeScreen": {
          "type": "boolean",
          "default": true,
          "description": "Show the welcome/startup menu when opening Claude Pilot"
        },
        "claudePilot.ui.rememberLastSession": {
          "type": "boolean",
          "default": true,
          "description": "Remember and offer to resume the last session"
        },
        "claudePilot.ui.sessionHistoryLimit": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "Maximum number of sessions to keep in history"
        },
        "claudePilot.todos.defaultFilter": {
          "type": "string",
          "enum": [
            "all",
            "pending",
            "in_progress",
            "completed"
          ],
          "default": "all",
          "description": "Default filter for todo list view"
        },
        "claudePilot.todos.sortBy": {
          "type": "string",
          "enum": [
            "priority",
            "status",
            "content"
          ],
          "default": "priority",
          "description": "Default sorting for todo items"
        },
        "claudePilot.todos.showStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show todo count in the status bar"
        },
        "claudePilot.todos.expandByDefault": {
          "type": "boolean",
          "default": true,
          "description": "Expand todo categories by default in the tree view"
        },
        "claudePilot.experimental.enableAdvancedFeatures": {
          "type": "boolean",
          "default": false,
          "description": "Enable experimental features (may be unstable)"
        },
        "claudePilot.outputChannel.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable output channel logging for PTY data"
        },
        "claudePilot.outputChannel.showOnStartup": {
          "type": "boolean",
          "default": false,
          "description": "Automatically show output channel when extension activates"
        },
        "claudePilot.outputChannel.stripAnsiCodes": {
          "type": "boolean",
          "default": true,
          "description": "Remove ANSI escape codes from PTY output for cleaner logs"
        },
        "claudePilot.outputChannel.logLevel": {
          "type": "string",
          "enum": [
            "error",
            "warning",
            "info",
            "debug"
          ],
          "default": "info",
          "description": "Logging level for output channel",
          "enumDescriptions": [
            "Only log errors",
            "Log errors and warnings",
            "Log errors, warnings, and info messages",
            "Log everything including debug messages"
          ]
        }
      }
    }
  },
  "extensionDependencies": [
    "Anthropic.claude-code"
  ],
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@vscode/test-electron": "^2.5.2",
    "mocha": "^11.7.1",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "@lydell/node-pty": "^1.1.0",
    "@xterm/addon-canvas": "^0.7.0",
    "@xterm/addon-fit": "^0.10.0",
    "@xterm/addon-web-links": "^0.11.0",
    "@xterm/addon-webgl": "^0.18.0",
    "@xterm/xterm": "^5.3.0",
    "vsce": "^2.15.0"
  },
  "volta": {
    "node": "22.17.1"
  }
}
